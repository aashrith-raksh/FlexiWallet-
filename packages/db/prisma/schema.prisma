// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed     = "node dist/seed.js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String? @unique
  name     String?
  phone    String  @unique
  password String

  Balance           Balance[]
  OnRampTransaction OnRampTransaction[]
  sentTransfers     PeerTransaction[]   @relation(name: "senderRelation")
  receivedTransfers PeerTransaction[]   @relation(name: "receiverRelation")
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

enum AuthType {
  Google
  Github
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model PeerTransaction {
  id         Int      @id @default(autoincrement())
  amount     Int
  senderId   Int
  receiverId Int
  timestamp  DateTime
  sender     User     @relation(name: "senderRelation", fields: [senderId], references: [id])
  receiver   User     @relation(name: "receiverRelation", fields: [receiverId], references: [id])
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
